#!/usr/bin/env bash
. /usr/share/0outils/fonctions_paquets.sh

VERSION=3.4.0
WGET=ftp://ftp.gnutls.org/gcrypt/$NAMESRC/v$(echo $VERSION | cut -d'.' -f1-2)/$NAMESRC-$VERSION.tar.xz
DESC="Outils et bibliothèques de communication sécurisée"

telecharger_sources
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# On compile les bibliothèques 32 bits pour le multilib sous x86_64 :
if [ "${PKGARCH}" = "x86_64" ]; then
	
	# On passe en 32 bits (CFLAGS, LIBDIRSUFFIX, PKGARCH et Cie) :
	cflags i686
	
	# On corige une bourde des dévellopeurs :
	cat $CWD/gnutls.buildfix.patch | patch -p1
	
	# Compilation pour i686 :
	autoreconf -vif
	CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
	./configure \
		--prefix=/usr \
		--sysconfdir=/etc \
		--localstatedir=/var \
		--libdir=/usr/lib${LIBDIRSUFFIX} \
		--mandir=/usr/man \
		--infodir=/usr/info \
		--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
		--enable-guile \
		--with-guile-site-dir=no \
		--with-default-trust-store-pkcs11="pkcs11:model=p11-kit-trust;manufacturer=PKCS%2311%20Kit" \
		--with-zlib \
		--build=${PKGARCH}-0linux-linux-gnu
	
	make -j${JOBS} || make
	fakeroot make install DESTDIR=${PKG}
fi

# On refait la préparation des sources, il peut rester des déchets de la
# compilation en 32 bits (et make 'distclean' ne fonctionne pas toujours) :
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# On corige une bourde des dévellopeurs :
cat $CWD/gnutls.buildfix.patch | patch -p1

# Compilation :
autoreconf -vif
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
	--prefix=/usr \
	--sysconfdir=/etc \
	--localstatedir=/var \
	--libdir=/usr/lib${LIBDIRSUFFIX} \
	--mandir=/usr/man \
	--infodir=/usr/info \
	--docdir=/usr/doc/${NAMETGZ}-${VERSION} \
	--enable-guile \
	--with-guile-site-dir=no \
	--with-default-trust-store-pkcs11="pkcs11:model=p11-kit-trust;manufacturer=PKCS%2311%20Kit" \
	--with-zlib \
	--build=${PKGARCH}-0linux-linux-gnu

make -j${JOBS} || make

# On lance la suite de tests si $TESTS est positionnée :
if [ ! "${TESTS}" = "" ]; then
	make -k check 2>&1 || true
fi

fakeroot make install DESTDIR=${PKG}

installer_doc
creer_post_installation
stripper
empaqueter

# C'est fini.
